#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#

    Target:

        Create a series of images with different versions of Debian and Java.

    Result:

        Work in progress ....

# -----------------------------------------------------
# Build our modifed builder.
#[user@desktop]

    source "${HOME}/aglais.env"
    buildtag=$(date '+%Y%m%d-%H%M%S')
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/builder:latest \
        --tag aglais/builder:${buildtag:?} \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        "${AGLAIS_CODE:?}/experiments/kubernetes/docker/builder"

    >   STEP 1: FROM firethorn/builder:latest
    >   ....
    >   STEP 2: MAINTAINER Dave Morris <docker-admin@metagrid.co.uk>
    >   STEP 3: ARG buildtag
    >   STEP 4: ARG buildtime
    >   STEP 5: LABEL maintainer="Dave Morris <docker-admin@metagrid.co.uk>"
    >   STEP 6: LABEL buildtag="${buildtag}"
    >   STEP 7: LABEL buildtime="${buildtime}"
    >   STEP 8: LABEL gitrepo="https://github.com/wfau/aglais"
    >   STEP 9: RUN dnf install -y bzip2
    >   ....
    >   STEP 10: COMMIT aglais/builder:latest
    >   ....


# -----------------------------------------------------
# Push our new image to the registry.
#[user@desktoop]

    buildah login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass) \
        registry-1.docker.io

    buildah push "aglais/builder:${buildtag:?}"
    buildah push "aglais/builder:latest"

    >   ....
    >   ....


# -----------------------------------------------------
# Create a vitual machine to work with.
#[user@desktop]

    ssh trop04

        createvm

    >   ....
    >   INFO : Node name [Wumar]
    >   INFO : Base name [fedora-31-docker-base-20200722.qcow]
    >   INFO : Base path [/var/lib/libvirt/images/base/fedora-31-docker-base-20200722.qcow]
    >   INFO : Disc name [Wumar.qcow]
    >   INFO : Disc size [32GiB]
    >   ....

# -----------------------------------------------------
# Login to the virtual machine.
#[user@desktop]

    ssh Wumar


# -----------------------------------------------------
# Create our build directories.
[user@virtual]

    mkdir "${HOME}/build"
    mkdir "${HOME}/cache"


# -----------------------------------------------------
# Configure our source code paths.
#[user@virtual]

    cat > "${HOME}/aglais.env" << 'EOF'
AGLAIS_REPO='https://github.com/Zarquan/aglais.git'
AGLAIS_HOME="${HOME}/build/aglais"
AGLAIS_CODE="${AGLAIS_HOME:?}/github-zrq"
AGLAIS_CLOUD=gaia-prod

ZEPPELIN_REPO='https://github.com/Zarquan/aglais-zeppelin.git'
ZEPPELIN_HOME="${HOME}/build/aglais-zeppelin"
ZEPPELIN_CODE="${ZEPPELIN_HOME:?}/github-zrq"
EOF


# -----------------------------------------------------
# Clone our source code.
#[user@virtual]

    gitclone()
        {
        local codepath=${1:?}
        local coderepo=${2:?}

        local coderoot=$(dirname  ${codepath})
        local codename=$(basename ${codepath})

        echo "Checking [${codepath:?}]"
        if [ -e "${codepath:?}" ]
        then
            echo "Updating [${codepath:?}]"
            pushd "${codepath:?}"
                git pull
            popd
        else
            echo "Checking [${coderoot:?}]"
            if [ ! -e "${coderoot:?}" ]
            then
                echo "Creating [${coderoot:?}]"
                mkdir -p "${coderoot:?}"
            fi

            echo "Checkout [${coderoot:?}][${codename:?}]"
            pushd "${coderoot:?}"
                git clone "${coderepo:?}" "${codename:?}"
            popd
        fi
        }

    source "${HOME}/aglais.env"
    gitclone "${AGLAIS_CODE:?}" "${AGLAIS_REPO:?}"

    >   Checking [/home/Stevedore/build/aglais/github-zrq]
    >   Checking [/home/Stevedore/build/aglais]
    >   Creating [/home/Stevedore/build/aglais]
    >   Checkout [/home/Stevedore/build/aglais][github-zrq]
    >   ~/build/aglais ~
    >   Cloning into 'github-zrq'...
    >   remote: Enumerating objects: 720, done.
    >   remote: Counting objects: 100% (720/720), done.
    >   remote: Compressing objects: 100% (494/494), done.
    >   remote: Total 5626 (delta 298), reused 461 (delta 197), pack-reused 4906
    >   Receiving objects: 100% (5626/5626), 2.49 MiB | 1.94 MiB/s, done.
    >   Resolving deltas: 100% (2927/2927), done.


    source "${HOME}/aglais.env"
    gitclone "${ZEPPELIN_CODE:?}" "${ZEPPELIN_REPO:?}"

    >   Checking [/home/Stevedore/build/aglais-zeppelin/github-zrq]
    >   Checking [/home/Stevedore/build/aglais-zeppelin]
    >   Creating [/home/Stevedore/build/aglais-zeppelin]
    >   Checkout [/home/Stevedore/build/aglais-zeppelin][github-zrq]
    >   ~/build/aglais-zeppelin ~
    >   Cloning into 'github-zrq'...
    >   remote: Enumerating objects: 3, done.
    >   remote: Counting objects: 100% (3/3), done.
    >   remote: Compressing objects: 100% (3/3), done.
    >   remote: Total 98409 (delta 0), reused 0 (delta 0), pack-reused 98406
    >   Receiving objects: 100% (98409/98409), 86.35 MiB | 6.75 MiB/s, done.
    >   Resolving deltas: 100% (40365/40365), done.


# -----------------------------------------------------
# Swap to our development branch.
#[user@virtual]

    source "${HOME}/aglais.env"
    pushd  "${AGLAIS_CODE:?}"

        git checkout 20201218-zrq-working

    popd

    >   Branch '20201218-zrq-working' set up to track remote branch '20201218-zrq-working' from 'origin'.
    >   Switched to a new branch '20201218-zrq-working'


    source "${HOME}/aglais.env"
    pushd  "${ZEPPELIN_CODE:?}"

        git checkout 20200911-zrq-devel

    popd

    >   Branch '20200911-zrq-devel' set up to track remote branch '20200911-zrq-devel' from 'origin'.
    >   Switched to a new branch '20200911-zrq-devel'


# -----------------------------------------------------
# Run a Java build container, using the same UID inside.
# https://www.redhat.com/sysadmin/user-flag-rootless-containers
[user@virtual]

    podman run \
        --rm \
        --tty \
        --interactive \
        --hostname builder \
        --userns keep-id \
        --env "SSH_AUTH_SOCK=/tmp/ssh_auth_sock" \
        --volume "${SSH_AUTH_SOCK}:/tmp/ssh_auth_sock:z" \
        --volume "${HOME}/cache:/var/local/cache:rw" \
        --volume "${HOME}/build:/var/local/build:rw" \
        "aglais/builder:latest" \
        bash

    >   ....
    >   ....



# -----------------------------------------------------
# Configure our home directory.
# (*) defaults to /root
#[user@builder]

    HOME=/tmp/home

    mkdir "${HOME}"


# -----------------------------------------------------
# Configure our source code paths.
#[user@builder]

    cat > "${HOME}/aglais.env" << 'EOF'
AGLAIS_REPO='https://github.com/Zarquan/aglais.git'
AGLAIS_HOME='/var/local/build/aglais'
AGLAIS_CODE="${AGLAIS_HOME:?}/github-zrq"
AGLAIS_CLOUD=gaia-prod

ZEPPELIN_REPO='https://github.com/Zarquan/aglais-zeppelin.git'
ZEPPELIN_HOME='/var/local/build/aglais-zeppelin'
ZEPPELIN_CODE="${ZEPPELIN_HOME:?}/github-zrq"
EOF


# -----------------------------------------------------
# Build our Zeppelin code.
#[user@builder]

    # Build all the components and install them in the Maven cache.
    source "${HOME}/aglais.env"
    pushd  "${ZEPPELIN_CODE:?}"

        mvn clean install -D skipTests -P build-distr -P hadoop3

    popd


# -----------------------------------------------------
# Exit back to our host VM.
#[user@builder]

    exit


# -----------------------------------------------------
# Locate our build result.
#[user@virtual]

    source "${HOME}/aglais.env"

    zepversion=$(
        sed -n '
            s/^.*<version project="zeppelin">\(.*\)<\/version>.*$/\1/ p
            ' "${ZEPPELIN_CODE:?}/pom.xml"
        )

    zepresult=zeppelin-distribution/target/zeppelin-${zepversion:?}/zeppelin-${zepversion:?}


# -----------------------------------------------------
# Build the Zeppelin base image.
#[user@virtual]

    debversion=9
    jdkversion=8
    versionstr=debian-${debversion}-java-${jdkversion}

    source "${HOME}/aglais.env"
    buildtag=$(date '+%Y%m%d-%H%M%S')-${versionstr:?}
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-base:latest \
        --tag aglais/zeppelin-base:${buildtag:?} \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --build-arg "debversion=${debversion:?}" \
        --build-arg "jdkversion=${jdkversion:?}" \
        "${AGLAIS_CODE:?}/experiments/kubernetes/docker/zeppelin/base"

    >   ....
    >   ....


# -----------------------------------------------------
# Build the Zeppelin main image.
#[user@virtual]

    buildsrc=${buildtag:?}
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-main:latest \
        --tag aglais/zeppelin-main:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        --file "${AGLAIS_CODE:?}/experiments/kubernetes/docker/zeppelin/main/Dockerfile" \
        "${ZEPPELIN_CODE:?}/${zepresult:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Build the Zeppelin dev image.
#[user@virtual]

    buildsrc=${buildtag:?}
    buildtime=$(date '+%Y-%m-%dT%H:%M:%S')

    buildah bud \
        --format docker \
        --tag aglais/zeppelin-dev:latest \
        --tag aglais/zeppelin-dev:${buildtag:?} \
        --build-arg "buildsrc=${buildsrc:?}" \
        --build-arg "buildtag=${buildtag:?}" \
        --build-arg "buildtime=${buildtime:?}" \
        "${AGLAIS_CODE:?}/experiments/kubernetes/docker/zeppelin/dev"


    >   ....
    >   ....


# -----------------------------------------------------
# Configure our secret function.
#[user@virtual]

    ....
    secret frog


# -----------------------------------------------------
# Push our new Zeppelin images to the registry.
#[user@virtual]

    buildah login \
        --username $(secret docker.io.user) \
        --password $(secret docker.io.pass) \
        registry-1.docker.io

    buildah push "aglais/zeppelin-base:${buildtag:?}"
    buildah push "aglais/zeppelin-base:latest"

    buildah push "aglais/zeppelin-main:${buildtag:?}"
    buildah push "aglais/zeppelin-main:latest"

    buildah push "aglais/zeppelin-dev:${buildtag:?}"
    buildah push "aglais/zeppelin-dev:latest"

    >   ....
    >   ....

