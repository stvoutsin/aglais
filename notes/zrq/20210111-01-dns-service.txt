#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#zrq-notes-zeppelin
#


    Moving towards running our own DNS service for the development deployments.

    Create a separate VM on the Cumulus Openstack system, not linked to our Kubernetes cluster.
    Add an external floating IP address.
    Deploy dnsmasq service, configured to provide DNS records for a sub-domain.
    Update our main DNS records to delegate the sub-domain to our new service.
        https://admin.lcn.com/dns/mod.php?origin=aglais.uk&ns=lcn.com

    Problem - if we host this VM on the Cumulus Openstack system, then it will get deleted by our 'delete-all' script.
    1) Host the VM on a different service provider.
        Logistics of allowing shared access to a private account on commercial cloud provider :-(
    2) Tweak our 'delete-all' script to avoid deleting this instance
        Exclude the VM by name.
        Exclude the floating address ..
            Do a DNS lookup on the service name to find out what address to exclude ?
            Navigate the Openstack objects to find the address attached to the VM ?
        Exclude the security rules by name.



