#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2020, ROE (http://www.roe.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-time
#zrq-notes-indent
#zrq-notes-crypto
#zrq-notes-ansible
#zrq-notes-osformat
#

    Target:

        New clean deployment using latest Zeppelin images.

    Result:

        Fails in Openstack with 'No valid host was found'

    Source:

        Latest notes on creating new images.
        notes/zrq/20201226-03-zeppelin-images.txt


# -----------------------------------------------------
# Update the project name.
#[user@desktop]

    cloudname=gaia-prod

    sed -i '
        s/^\(AGLAIS_CLOUD\)=.*$/\1='${cloudname:?}'/
        ' "${HOME}/aglais.env"


# -----------------------------------------------------
# Modify the version number in our Helm charts.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE:?}"

        gedit experiments/kubernetes/helm/tools/zeppelin/values.yaml

        ~   zeppelin_server_image:   "aglais/20201227-051927-debian-9-java-8"
        ~   zeppelin_worker_image:   "aglais/20201227-051927-debian-9-java-8"

    popd


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name kubernator \
        --hostname kubernator \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/openstack:/openstack:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/kubernetes:/kubernetes:rw,z" \
        atolmis/openstack-client:latest \
        bash


# -----------------------------------------------------
# Delete everything.
#[root@kubernator]

    /openstack/bin/delete-all.sh \
        "${cloudname:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Run the main Kubernetes deployment.
#[root@kubernator]

    buildname="aglais-$(date '+%Y%m%d')"
    namespace=${buildname,,}

    /kubernetes/bin/create-all.sh \
        "${cloudname:?}" \
        "${buildname:?}" \
        "${namespace:?}"

    >   ....
    >   ....
    >   IN PROGRESS
    >   IN PROGRESS
    >   CREATE FAILED

    #
    # Create failed - no valid hosts.
    #

# -----------------------------------------------------
# Check the cluster details.
#[root@kubernator]

    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster list

    >   +--------------------------------------+-------------------------+------------------+------------+--------------+---------------+---------------+
    >   | uuid                                 | name                    | keypair          | node_count | master_count | status        | health_status |
    >   +--------------------------------------+-------------------------+------------------+------------+--------------+---------------+---------------+
    >   | 82d1f265-ebbc-430e-a526-fae517b27232 | aglais-20201229-cluster | zrq-gaia-keypair |          4 |            1 | CREATE_FAILED | None          |
    >   +--------------------------------------+-------------------------+------------------+------------+--------------+---------------+---------------+

    clusterid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            coe cluster list \
                --format json \
        | jq -r '.[0] | .uuid'
        )


    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster show \
            --format json \
            "${clusterid:?}" \
    | jq '.faults'


    >   {
    >     "default-worker": "Resource CREATE failed: ResourceInError: resources.kube_minions.resources[2].resources.kube-minion: Went to status ERROR due to \"Message: No valid host was found. , Code: 500\"",
    >     "default-master": "Resource CREATE failed: ResourceInError: resources.kube_minions.resources[2].resources.kube-minion: Went to status ERROR due to \"Message: No valid host was found. , Code: 500\""
    >   }


# -----------------------------------------------------
# Delete everything.
#[root@kubernator]

    /openstack/bin/delete-all.sh \
        "${cloudname:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Run the main Kubernetes deployment.
#[root@kubernator]

    buildname="aglais-$(date '+%Y%m%d')"
    namespace=${buildname,,}

    /kubernetes/bin/create-all.sh \
        "${cloudname:?}" \
        "${buildname:?}" \
        "${namespace:?}"

    >   Creating cluster
    >   Cluster ID [33d5e602-ba8e-4553-9ce4-2f7af44b4ffc]
    >   ....
    >   ....
    >   IN PROGRESS
    >   IN PROGRESS
    >   COMPLETE

    >   Installing dashboard Helm chart
    >   Namespace [aglais-20201229]
    >   Dash host [valeria.metagrid.xyz]
    >   Getting updates for unmanaged Helm repositories...
    >   ...Successfully got an update from the "https://kubernetes.github.io/dashboard" chart repository
    >   Saving 1 charts
    >   Downloading kubernetes-dashboard from repo https://kubernetes.github.io/dashboard
    >   Deleting outdated charts
    >   Release "aglais-dashboard" does not exist. Installing it now.
    >   Error: Internal error occurred: failed calling webhook "validate.nginx.ingress.kubernetes.io": Post https://aglais-ingress-nginx-controller-admission.aglais-20201229.svc:443/networking/v1beta1/ingresses?timeout=10s: dial tcp 10.254.77.231:443: connect: connection refused

    #
    # Mysterious Dashboard error is back :-(
    #


# -----------------------------------------------------
# Get the ServiceAccount token.
#[root@kubernator]

    secretname=$(
        kubectl \
            --output json \
            --namespace "${namespace:?}" \
            get ServiceAccount \
                "aglais-dashboard-kubernetes-dashboard" \
        | jq -r '.secrets[0].name'
        )

    kubectl \
        --output json \
        --namespace "${namespace:?}" \
        get Secret \
            "${secretname:?}" \
    | jq -r '.data.token | @base64d'


    >   ....
    >   ....


# -----------------------------------------------------
# Get the Ingress address.
#[root@kubernator]

    kubectl \
        --namespace "${namespace:?}" \
        get Ingress

    >   NAME                      HOSTS                   ADDRESS           PORTS     AGE
    >   zeppelin-server-ingress   zeppelin.metagrid.xyz   128.232.227.168   80, 443   108s


# -----------------------------------------------------
# -----------------------------------------------------

    #
    # Update our DNS ..
    #


# -----------------------------------------------------
# Check the Dashboard page.
#[root@kubernator]

    curl --head --insecure "https://valeria.metagrid.xyz/"

    >   HTTP/2 404
    >   date: Tue, 29 Dec 2020 11:32:57 GMT
    >   content-type: text/html
    >   content-length: 146
    >   strict-transport-security: max-age=15724800; includeSubDomains


# -----------------------------------------------------
# Check the Zeppelin page.
#[root@kubernator]

    curl --head --insecure "https://zeppelin.metagrid.xyz/"

    >   HTTP/2 503
    >   date: Tue, 29 Dec 2020 11:33:32 GMT
    >   content-type: text/html
    >   content-length: 190
    >   strict-transport-security: max-age=15724800; includeSubDomains


# -----------------------------------------------------
# Check the logs on the Zeppelin Pod.
#[root@kubernator]

    zeppodid=$(
        kubectl \
            --namespace ${namespace} \
                get pod \
                --output json \
        | jq -r '
            .items[] |
            select(
                .metadata.name |
                startswith(
                    "zeppelin-server-deploy"
                    )
                ) |
            .metadata.name
            '
        )

    kubectl \
        --namespace ${namespace} \
            logs \
                "${zeppodid:?}" \
                --container zeppelin-server-actual

    >   Error from server (BadRequest): container "zeppelin-server-actual" in pod "zeppelin-server-deploy-55c54d7d8c-csvvp" is waiting to start: trying and failing to pull image

    #
    # The image exists in Docker Hub, but is not being downloaded to our cluster.
    #


# -----------------------------------------------------
# Check the Zeppelin Pod status.
#[root@kubernator]

    kubectl \
        --namespace ${namespace} \
            describe Pod \
                "${zeppodid:?}"

    >   Name:         zeppelin-server-deploy-55c54d7d8c-csvvp
    >   Namespace:    aglais-20201229
    >   Node:         aglais-20201229-cluster-lcynqvwqpldn-node-0/10.0.0.124
    >   ....
    >   ....
    >   Events:
    >     Type     Reason     Age                     From                                                  Message
    >     ----     ------     ----                    ----                                                  -------
    >     Normal   Scheduled  <unknown>               default-scheduler                                     Successfully assigned aglais-20201229/zeppelin-server-deploy-55c54d7d8c-csvvp to aglais-20201229-cluster-lcynqvwqpldn-node-0
    >     Normal   Pulling    9m6s                    kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Pulling image "nginx:1.14.0"
    >     Normal   Pulled     9m                      kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Successfully pulled image "nginx:1.14.0"
    >     Normal   Pulling    9m                      kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Pulling image "janeczku/go-dnsmasq:release-1.0.5"
    >     Normal   Created    9m                      kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Created container zeppelin-server-nginx
    >     Normal   Started    9m                      kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Started container zeppelin-server-nginx
    >     Normal   Pulled     8m57s                   kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Successfully pulled image "janeczku/go-dnsmasq:release-1.0.5"
    >     Normal   Created    8m57s                   kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Created container zeppelin-server-dnsmasq
    >     Normal   Started    8m57s                   kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Started container zeppelin-server-dnsmasq
    >     Normal   Pulling    8m26s (x3 over 9m14s)   kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Pulling image "aglais/20201227-051927-debian-9-java-8"
    >     Warning  Failed     8m20s (x3 over 9m6s)    kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Error: ErrImagePull
    >     Warning  Failed     8m20s (x3 over 9m6s)    kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Failed to pull image "aglais/20201227-051927-debian-9-java-8": rpc error: code = Unknown desc = repository docker.io/aglais/20201227-051927-debian-9-java-8 not found: does not exist or no pull access
    >     Warning  Failed     7m51s (x4 over 8m57s)   kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Error: ImagePullBackOff
    >     Normal   BackOff    4m10s (x18 over 8m57s)  kubelet, aglais-20201229-cluster-lcynqvwqpldn-node-0  Back-off pulling image "aglais/20201227-051927-debian-9-java-8"

    #
    # OK - I got the image name wrong.
    # Should be 'aglais/zeppelin-dev:20201227-051927-debian-9-java-8'
    # not just  'aglais/20201227-051927-debian-9-java-8'
    #


# -----------------------------------------------------
# -----------------------------------------------------
# Modify the version number in our Helm charts.
#[user@desktop]

    source "${HOME:?}/aglais.env"
    pushd "${AGLAIS_CODE:?}"

        gedit experiments/kubernetes/helm/tools/zeppelin/values.yaml

        ~   zeppelin_server_image:   "aglais/zeppelin-dev:20201227-051927-debian-9-java-8"
        ~   zeppelin_worker_image:   "aglais/zeppelin-dev:20201227-051927-debian-9-java-8"

    popd


# -----------------------------------------------------
# Create a container to work with.
#[user@desktop]

    source "${HOME:?}/aglais.env"

    podman run \
        --rm \
        --tty \
        --interactive \
        --name kubernator \
        --hostname kubernator \
        --env "cloudname=${AGLAIS_CLOUD:?}" \
        --volume "${HOME:?}/clouds.yaml:/etc/openstack/clouds.yaml:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/openstack:/openstack:ro,z" \
        --volume "${AGLAIS_CODE:?}/experiments/kubernetes:/kubernetes:rw,z" \
        atolmis/openstack-client:latest \
        bash


# -----------------------------------------------------
# Delete everything.
#[root@kubernator]

    /openstack/bin/delete-all.sh \
        "${cloudname:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Run the main Kubernetes deployment.
#[root@kubernator]

    buildname="aglais-$(date '+%Y%m%d')"
    namespace=${buildname,,}

    /kubernetes/bin/create-all.sh \
        "${cloudname:?}" \
        "${buildname:?}" \
        "${namespace:?}"

    >   ....
    >   ....
    >   IN PROGRESS
    >   IN PROGRESS
    >   CREATE FAILED

    #
    # Create failed - no valid hosts.
    #

# -----------------------------------------------------
# Check the cluster details.
#[root@kubernator]

    clusterid=$(
        openstack \
            --os-cloud "${cloudname:?}" \
            coe cluster list \
                --format json \
        | jq -r '.[0] | .uuid'
        )


    openstack \
        --os-cloud "${cloudname:?}" \
        coe cluster show \
            --format json \
            "${clusterid:?}" \
    | jq '.faults'


    >   {
    >     "default-worker": "Resource CREATE failed: ResourceInError: resources.kube_minions.resources[3].resources.kube-minion: Went to status ERROR due to \"Message: No valid host was found. , Code: 500\"",
    >     "default-master": "Resource CREATE failed: ResourceInError: resources.kube_minions.resources[3].resources.kube-minion: Went to status ERROR due to \"Message: No valid host was found. , Code: 500\""
    >   }

    #
    # 50% failure rate today.
    # TODO - add error checking to the install scripts.
    # https://github.com/wfau/aglais/issues/315
    #


# -----------------------------------------------------
# Delete everything.
#[root@kubernator]

    /openstack/bin/delete-all.sh \
        "${cloudname:?}"

    >   ....
    >   ....


# -----------------------------------------------------
# Run the main Kubernetes deployment.
#[root@kubernator]

    buildname="aglais-$(date '+%Y%m%d')"
    namespace=${buildname,,}

    /kubernetes/bin/create-all.sh \
        "${cloudname:?}" \
        "${buildname:?}" \
        "${namespace:?}"

    >   ....
    >   ....
    >   IN PROGRESS
    >   IN PROGRESS
    >   CREATE FAILED

    #
    # Create failed - no valid hosts.
    #


